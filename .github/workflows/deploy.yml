name: CI/CD - Build, Test, Push to ECR, Deploy via SSM

on:
  push:
    branches:
      - development

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        pytest tests/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image to ECR
      env:
        ECR_REPO: ${{ secrets.ECR_REPO }}
      run: |
        docker build -t $ECR_REPO:$IMAGE_TAG .
        docker push $ECR_REPO:$IMAGE_TAG

    - name: Deploy via SSM to EC2
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=GenAI Book EC2" \
                    "Name=instance-state-name,Values=running" \
          --query "Reservations[*].Instances[*].InstanceId" \
          --output text)

        aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --comment "Deploy latest image from ECR" \
          --instance-ids "$INSTANCE_ID" \
          --parameters commands='
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
              | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO }}

            docker pull ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}

            docker stop book-api || true && docker rm book-api || true

            docker run -d --name book-api -p 8000:8000 \
              --env-file /home/ubuntu/app/.env \
              ${{ secrets.ECR_REPO }}:${{ env.IMAGE_TAG }}
          ' \
          --output text
